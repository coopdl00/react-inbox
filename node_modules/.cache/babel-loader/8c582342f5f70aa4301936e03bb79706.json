{"ast":null,"code":"import _objectSpread from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/src/App.js\";\nimport React, { Component } from 'react';\nimport ToolBar from './components/ToolBar.js';\nimport MessageList from './components/MessageList.js';\nimport Compose from './components/Compose.js';\nimport './App.css';\nvar API = 'https://collective-api-coopdl00.herokuapp.com/api';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      composing: false,\n      allselected: false,\n      checked: false,\n      selectedMessages: [],\n      unread: 0\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, messages, unread, newState;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(API, \"/messages\"));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              messages = _context.sent;\n              unread = messages.filter(function (message) {\n                return message.read === false;\n              }).length;\n              newState = {\n                messages: _toConsumableArray(messages),\n                unread: unread\n              };\n              console.log(newState);\n              newState.messages.forEach(function (message) {\n                return message.selected = false;\n              });\n\n              _this.setState(newState);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.updateMessage =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(data) {\n        var response, messages, newState;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"\".concat(API, \"/messages\"), {\n                  method: 'PATCH',\n                  body: JSON.stringify(data),\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                  }\n                });\n\n              case 2:\n                _context2.next = 4;\n                return fetch(\"\".concat(API, \"/messages\"));\n\n              case 4:\n                response = _context2.sent;\n                _context2.next = 7;\n                return response.json();\n\n              case 7:\n                messages = _context2.sent;\n                newState = {\n                  messages: _toConsumableArray(messages)\n                };\n                newState.messages = newState.messages.map(function (message) {\n                  var m = _objectSpread({}, message);\n\n                  m.selected = false;\n                  return m;\n                });\n\n                _this.setState(newState);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handlePost =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var response, messages, newState;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                e.preventDefault();\n\n                if (!(!e.target.subject.value || !e.target.body.value)) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                _context3.next = 5;\n                return fetch(\"\".concat(API, \"/messages\"), {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    subject: e.target.subject.value,\n                    body: e.target.body.value,\n                    read: false,\n                    starred: false,\n                    selected: false,\n                    labels: []\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                  }\n                });\n\n              case 5:\n                _context3.next = 7;\n                return fetch(\"\".concat(API, \"/messages\"));\n\n              case 7:\n                response = _context3.sent;\n                _context3.next = 10;\n                return response.json();\n\n              case 10:\n                messages = _context3.sent;\n                newState = {\n                  messages: _toConsumableArray(messages)\n                };\n                newState.composing = false;\n\n                _this.setState(newState);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.delete =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var selected, idToDelete, response, message, newState;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              selected = _this.state.messages.filter(function (message) {\n                return message.selected;\n              });\n              idToDelete = selected.map(function (message) {\n                return message.id;\n              });\n              _context4.next = 4;\n              return fetch(\"\".concat(API, \"/messages\"), {\n                method: \"PATCH\",\n                body: JSON.stringify({\n                  messageIds: _toConsumableArray(idToDelete),\n                  command: 'delete'\n                }),\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json'\n                }\n              });\n\n            case 4:\n              response = _context4.sent;\n              _context4.next = 7;\n              return response.json();\n\n            case 7:\n              message = _context4.sent;\n              newState = {\n                messages: _toConsumableArray(message)\n              };\n              newState.messages.forEach(function (message) {\n                return message['selected'] = false;\n              });\n              console.log(message);\n\n              _this.setState(newState);\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    _this.select = function (e, id) {\n      var newMessages = _toConsumableArray(_this.state.messages);\n\n      var idx = newMessages.findIndex(function (message) {\n        return message.id === id;\n      });\n      newMessages[idx]['selected'] = e.target.checked;\n\n      _this.setState({\n        messages: newMessages\n      });\n    };\n\n    _this.selectAll = function () {\n      var newMessages = _this.state.messages;\n      newMessages.forEach(function (message) {\n        return message['selected'] = true;\n      });\n\n      _this.setState({\n        messages: newMessages,\n        allselected: true,\n        selectedMessages: _toConsumableArray(newMessages)\n      });\n\n      _this.toggleAllChecked();\n    };\n\n    _this.unSelect = function (e, id) {\n      var newMessages = _toConsumableArray(_this.state.messages);\n\n      var idx = newMessages.filter(function (message) {\n        return message.id === id;\n      });\n      idx[0]['selected'] = false;\n      newMessages[id] = idx[0];\n\n      _this.setState({\n        selectedMessages: newMessages\n      });\n    };\n\n    _this.starred =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        var newMessages, idx, isStarred;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                newMessages = _toConsumableArray(_this.state.messages);\n                idx = newMessages.findIndex(function (message) {\n                  return message.id === id;\n                });\n                isStarred = newMessages[idx]['starred'] || false;\n                isStarred ? newMessages[idx]['starred'] = false : newMessages[idx]['starred'] = true;\n                _context5.next = 6;\n                return _this.updateMessage({\n                  messageIds: [id],\n                  command: 'star',\n                  star: !isStarred\n                });\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.toggleComposing = function () {\n      _this.setState({\n        composing: !_this.state.composing\n      });\n    };\n\n    _this.read =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(id) {\n        var newMessages, idx;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                newMessages = _toConsumableArray(_this.state.messages);\n                idx = newMessages.findIndex(function (message) {\n                  return message.id === id;\n                });\n                newMessages[idx]['read'] = true;\n                _context6.next = 5;\n                return _this.updateMessage({\n                  messageIds: [id],\n                  command: 'read',\n                  read: newMessages[idx]['read']\n                });\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x4) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.deselectAll = function () {\n      var newMessages = _this.state.messages;\n      newMessages.forEach(function (message) {\n        return message['selected'] = false;\n      });\n\n      _this.setState({\n        messages: newMessages,\n        allselected: false,\n        selectedMessages: []\n      });\n\n      _this.toggleAllChecked();\n    };\n\n    _this.toggleAllChecked = function () {\n      _this.setState({\n        checked: !_this.state.checked\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Bootleg gmail :D\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(ToolBar, {\n        allselected: this.state.allselected,\n        deselectAll: this.deselectAll,\n        selectAll: this.selectAll,\n        toggleComposing: this.toggleComposing,\n        messages: this.messages,\n        delete: this.delete,\n        unread: this.state.unread,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), this.state.composing ? React.createElement(Compose, {\n        toggleComposing: this.toggleComposing,\n        handlePost: this.handlePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }) : React.createElement(MessageList, {\n        read: this.read,\n        starred: this.starred,\n        select: this.select,\n        messages: this.state.messages,\n        checked: this.state.checked,\n        unread: this.state.unread,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/src/App.js"],"names":["React","Component","ToolBar","MessageList","Compose","API","App","state","composing","allselected","checked","selectedMessages","unread","componentDidMount","fetch","response","json","messages","filter","message","read","length","newState","console","log","forEach","selected","setState","updateMessage","data","method","body","JSON","stringify","headers","map","m","handlePost","e","preventDefault","target","subject","value","starred","labels","delete","idToDelete","id","messageIds","command","select","newMessages","idx","findIndex","selectAll","toggleAllChecked","unSelect","isStarred","star","toggleComposing","deselectAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ToolBar from './components/ToolBar.js'\nimport MessageList from './components/MessageList.js'\nimport Compose from './components/Compose.js'\nimport './App.css';\n\nlet API = 'https://collective-api-coopdl00.herokuapp.com/api'\n\nclass App extends Component {\n  state = {\n    composing: false,\n    allselected: false,\n    checked: false,\n    selectedMessages: [],\n    unread: 0\n  }\n\n  componentDidMount = async() => {\n    const response = await fetch(`${API}/messages`)\n    const messages = await response.json()\n    let unread = messages.filter(message => message.read === false).length\n    let newState = {\n      messages: [...messages],\n      unread: unread\n    }\n    console.log(newState)\n    newState.messages.forEach(message => message.selected = false)\n    this.setState(newState)\n  }\n\n  updateMessage = async(data) => {\n    await fetch(`${API}/messages`,{\n      method: 'PATCH',\n      body: JSON.stringify(data),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    let response = await fetch(`${API}/messages`)\n    const messages = await response.json()\n    let newState = {messages:[...messages]}\n    newState.messages = newState.messages.map(message => {const m = {...message}; m.selected = false; return m})\n    this.setState(newState)\n  }\n\n  handlePost = async(e) => {\n    e.preventDefault()\n    if(!e.target.subject.value || !e.target.body.value){ return }\n    await fetch(`${API}/messages`,{\n      method: 'POST',\n      body: JSON.stringify({\n        subject: e.target.subject.value,\n        body: e.target.body.value,\n        read: false,\n        starred: false,\n        selected: false,\n        labels: [],\n      }),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    let response = await fetch(`${API}/messages`)\n    const messages = await response.json()\n    let newState = {messages: [...messages]}\n    newState.composing = false\n    this.setState(newState)\n  }\n\n  delete = async() => {\n    let selected = this.state.messages.filter(message => message.selected)\n    let idToDelete = selected.map(message => message.id)\n    const response = await fetch(`${API}/messages`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        messageIds: [...idToDelete],\n        command: 'delete',\n      }),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    const message = await response.json()\n    let newState = {messages: [...message]}\n    newState.messages.forEach(message => message['selected'] = false)\n    console.log(message)\n    this.setState(newState)\n  }\n\n  select = (e, id) => {\n    let newMessages = [...this.state.messages]\n    const idx = newMessages.findIndex(message => message.id === id)\n    newMessages[idx]['selected'] = e.target.checked\n    this.setState({messages: newMessages})\n  }\n\n  selectAll = () => {\n    let newMessages = this.state.messages\n    newMessages.forEach(message => message['selected'] = true)\n    this.setState({\n      messages: newMessages,\n      allselected: true,\n      selectedMessages: [...newMessages]\n    })\n    this.toggleAllChecked()\n  }\n\n  unSelect = (e, id) => {\n    let newMessages = [...this.state.messages]\n    const idx = newMessages.filter(message => message.id === id)\n    idx[0]['selected'] = false\n    newMessages[id] = idx[0]\n\n    this.setState({selectedMessages: newMessages})\n  }\n\n  starred = async(id) => {\n    let newMessages = [...this.state.messages]\n    const idx = newMessages.findIndex(message => message.id === id)\n    let isStarred = newMessages[idx]['starred'] || false\n    isStarred ? newMessages[idx]['starred'] = false : newMessages[idx]['starred'] = true\n    await this.updateMessage({\n      messageIds: [id],\n      command: 'star',\n      star: !isStarred\n    })\n  }\n\n  toggleComposing = () => {\n    this.setState({\n      composing: !this.state.composing\n    })\n  }\n\n  read = async(id) => {\n    let newMessages = [...this.state.messages]\n    const idx = newMessages.findIndex(message => message.id === id)\n    newMessages[idx]['read'] = true\n    await this.updateMessage({\n      messageIds: [id],\n      command: 'read',\n      read: newMessages[idx]['read']\n    })\n  }\n\n  deselectAll = () => {\n    let newMessages = this.state.messages\n    newMessages.forEach(message => message['selected'] = false)\n    this.setState({\n      messages: newMessages,\n      allselected: false,\n      selectedMessages: []\n    })\n    this.toggleAllChecked()\n  }\n\n  toggleAllChecked = () => {\n    this.setState({\n      checked: !this.state.checked\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"text-center\">Bootleg gmail :D</h1>\n        <div className=\"container\">\n          <ToolBar\n            allselected={this.state.allselected}\n            deselectAll={this.deselectAll}\n            selectAll={this.selectAll}\n            toggleComposing={this.toggleComposing}\n            messages={this.messages}\n            delete={this.delete}\n            unread={this.state.unread}\n          />\n          {this.state.composing ?\n            <Compose\n              toggleComposing={this.toggleComposing}\n              handlePost={this.handlePost}\n            />\n              :\n            <MessageList\n              read={this.read}\n              starred={this.starred}\n              select={this.select}\n              messages={this.state.messages}\n              checked={this.state.checked}\n              unread={this.state.unread}\n            />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}