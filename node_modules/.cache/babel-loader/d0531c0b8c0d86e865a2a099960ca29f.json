{"ast":null,"code":"import _classCallCheck from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/src/components/MessageList.js\";\nimport React, { Component } from 'react';\nimport Message from './Message.js';\n\nvar MessageList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessageList, _Component);\n\n  function MessageList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MessageList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MessageList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      messages: [{\n        \"id\": 1,\n        \"subject\": \"You can't input the protocol without calculating the mobile RSS protocol!\",\n        \"read\": false,\n        \"starred\": true,\n        \"labels\": [\"dev\", \"personal\"]\n      }, {\n        \"id\": 2,\n        \"subject\": \"connecting the system won't do anything, we need to input the mobile AI panel!\",\n        \"read\": false,\n        \"starred\": false,\n        \"selected\": true,\n        \"labels\": []\n      }, {\n        \"id\": 3,\n        \"subject\": \"Use the 1080p HTTP feed, then you can parse the cross-platform hard drive!\",\n        \"read\": false,\n        \"starred\": true,\n        \"labels\": [\"dev\"]\n      }, {\n        \"id\": 4,\n        \"subject\": \"We need to program the primary TCP hard drive!\",\n        \"read\": true,\n        \"starred\": false,\n        \"selected\": true,\n        \"labels\": []\n      }, {\n        \"id\": 5,\n        \"subject\": \"If we override the interface, we can get to the HTTP feed through the virtual EXE interface!\",\n        \"read\": false,\n        \"starred\": false,\n        \"labels\": [\"personal\"]\n      }, {\n        \"id\": 6,\n        \"subject\": \"We need to back up the wireless GB driver!\",\n        \"read\": true,\n        \"starred\": true,\n        \"labels\": []\n      }, {\n        \"id\": 7,\n        \"subject\": \"We need to index the mobile PCI bus!\",\n        \"read\": true,\n        \"starred\": false,\n        \"labels\": [\"dev\", \"personal\"]\n      }, {\n        \"id\": 8,\n        \"subject\": \"If we connect the sensor, we can get to the HDD port through the redundant IB firewall!\",\n        \"read\": true,\n        \"starred\": true,\n        \"labels\": []\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(MessageList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MessageList;\n}(Component);\n\nexport default MessageList;","map":{"version":3,"sources":["/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/src/components/MessageList.js"],"names":["React","Component","Message","MessageList","state","messages"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,cAApB;;IAEMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAO;AACLC,MAAAA,QAAQ,EAAE,CACR;AACE,cAAM,CADR;AAEE,mBAAW,2EAFb;AAGE,gBAAQ,KAHV;AAIE,mBAAW,IAJb;AAKE,kBAAU,CAAC,KAAD,EAAQ,UAAR;AALZ,OADQ,EAQR;AACE,cAAM,CADR;AAEE,mBAAW,gFAFb;AAGE,gBAAQ,KAHV;AAIE,mBAAW,KAJb;AAKE,oBAAY,IALd;AAME,kBAAU;AANZ,OARQ,EAgBR;AACE,cAAM,CADR;AAEE,mBAAW,4EAFb;AAGE,gBAAQ,KAHV;AAIE,mBAAW,IAJb;AAKE,kBAAU,CAAC,KAAD;AALZ,OAhBQ,EAuBR;AACE,cAAM,CADR;AAEE,mBAAW,gDAFb;AAGE,gBAAQ,IAHV;AAIE,mBAAW,KAJb;AAKE,oBAAY,IALd;AAME,kBAAU;AANZ,OAvBQ,EA+BR;AACE,cAAM,CADR;AAEE,mBAAW,8FAFb;AAGE,gBAAQ,KAHV;AAIE,mBAAW,KAJb;AAKE,kBAAU,CAAC,UAAD;AALZ,OA/BQ,EAsCR;AACE,cAAM,CADR;AAEE,mBAAW,4CAFb;AAGE,gBAAQ,IAHV;AAIE,mBAAW,IAJb;AAKE,kBAAU;AALZ,OAtCQ,EA6CR;AACE,cAAM,CADR;AAEE,mBAAW,sCAFb;AAGE,gBAAQ,IAHV;AAIE,mBAAW,KAJb;AAKE,kBAAU,CAAC,KAAD,EAAQ,UAAR;AALZ,OA7CQ,EAoDR;AACE,cAAM,CADR;AAEE,mBAAW,yFAFb;AAGE,gBAAQ,IAHV;AAIE,mBAAW,IAJb;AAKE,kBAAU;AALZ,OApDQ;AADL,K;;;;;;6BA+DE;AACP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAtEuBJ,S;;AAyE1B,eAAeE,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Message from './Message.js'\n\nclass MessageList extends Component {\n  state ={\n    messages: [\n      {\n        \"id\": 1,\n        \"subject\": \"You can't input the protocol without calculating the mobile RSS protocol!\",\n        \"read\": false,\n        \"starred\": true,\n        \"labels\": [\"dev\", \"personal\"]\n      },\n      {\n        \"id\": 2,\n        \"subject\": \"connecting the system won't do anything, we need to input the mobile AI panel!\",\n        \"read\": false,\n        \"starred\": false,\n        \"selected\": true,\n        \"labels\": []\n      },\n      {\n        \"id\": 3,\n        \"subject\": \"Use the 1080p HTTP feed, then you can parse the cross-platform hard drive!\",\n        \"read\": false,\n        \"starred\": true,\n        \"labels\": [\"dev\"]\n      },\n      {\n        \"id\": 4,\n        \"subject\": \"We need to program the primary TCP hard drive!\",\n        \"read\": true,\n        \"starred\": false,\n        \"selected\": true,\n        \"labels\": []\n      },\n      {\n        \"id\": 5,\n        \"subject\": \"If we override the interface, we can get to the HTTP feed through the virtual EXE interface!\",\n        \"read\": false,\n        \"starred\": false,\n        \"labels\": [\"personal\"]\n      },\n      {\n        \"id\": 6,\n        \"subject\": \"We need to back up the wireless GB driver!\",\n        \"read\": true,\n        \"starred\": true,\n        \"labels\": []\n      },\n      {\n        \"id\": 7,\n        \"subject\": \"We need to index the mobile PCI bus!\",\n        \"read\": true,\n        \"starred\": false,\n        \"labels\": [\"dev\", \"personal\"]\n      },\n      {\n        \"id\": 8,\n        \"subject\": \"If we connect the sensor, we can get to the HDD port through the redundant IB firewall!\",\n        \"read\": true,\n        \"starred\": true,\n        \"labels\": []\n      }\n    ]\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Message/>\n      </div>\n    )\n  }\n\n}\nexport default MessageList;\n"]},"metadata":{},"sourceType":"module"}