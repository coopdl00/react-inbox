{"ast":null,"code":"import _objectSpread from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Messages from './component/Messages';\nimport Toolbar from './components/Toolbar';\nimport Compose from './components/Compose';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, messages, newState;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://zeekmanapi.herokuapp.com/api/messages');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              messages = _context.sent;\n              newState = {\n                messages: _toConsumableArray(messages)\n              };\n              newState.messages.forEach(function (message) {\n                return message.selected = false;\n              });\n              newState.isComposing = false;\n\n              _this.setState(newState);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.updateMessage =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(data) {\n        var response, messages, newState;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch('https://zeekmanapi.herokuapp.com/api/messages', {\n                  method: 'PATCH',\n                  body: JSON.stringify(data),\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                  }\n                });\n\n              case 2:\n                _context2.next = 4;\n                return fetch('https://zeekmanapi.herokuapp.com/api/messages');\n\n              case 4:\n                response = _context2.sent;\n                _context2.next = 7;\n                return response.json();\n\n              case 7:\n                messages = _context2.sent;\n                newState = {\n                  messages: _toConsumableArray(messages)\n                };\n                newState.messages = newState.messages.map(function (message) {\n                  var m = _objectSpread({}, message);\n\n                  m.selected = false;\n                  return m;\n                });\n\n                _this.setState(newState);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var response, messages, newState;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                e.preventDefault();\n\n                if (!(!e.target.subject.value || !e.target.body.value)) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                _context3.next = 5;\n                return fetch('https://zeekmanapi.herokuapp.com/api/messages', {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    subject: e.target.subject.value,\n                    body: e.target.body.value,\n                    read: false,\n                    starred: false,\n                    selected: false,\n                    labels: []\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                  }\n                });\n\n              case 5:\n                _context3.next = 7;\n                return fetch('https://zeekmanapi.herokuapp.com/api/messages');\n\n              case 7:\n                response = _context3.sent;\n                _context3.next = 10;\n                return response.json();\n\n              case 10:\n                messages = _context3.sent;\n                newState = {\n                  messages: _toConsumableArray(messages)\n                };\n                newState.isComposing = false;\n\n                _this.setState(newState);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDelete =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var selected, messageIds, response, messages, newState;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              selected = _this.state.messages.filter(function (message) {\n                return message.selected;\n              });\n              messageIds = selected.map(function (message) {\n                return message.id;\n              });\n              _context4.next = 4;\n              return fetch('https://zeekmanapi.herokuapp.com/api/messages', {\n                method: 'PATCH',\n                body: JSON.stringify({\n                  messageIds: _toConsumableArray(messageIds),\n                  command: 'delete'\n                }),\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json'\n                }\n              });\n\n            case 4:\n              response = _context4.sent;\n              _context4.next = 7;\n              return response.json();\n\n            case 7:\n              messages = _context4.sent;\n              newState = {\n                messages: _toConsumableArray(messages)\n              };\n              newState.messages.forEach(function (message) {\n                return message['selected'] = false;\n              });\n\n              _this.setState(newState);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    _this.select = function (e, id) {\n      var newMessages = _toConsumableArray(_this.state.messages);\n\n      var idx = newMessages.findIndex(function (message) {\n        return message.id === id;\n      });\n      newMessages[idx]['selected'] = e.target.checked;\n\n      _this.setState({\n        messages: newMessages\n      });\n    };\n\n    _this.selectAll = function () {\n      var newMessages = _toConsumableArray(_this.state.messages);\n\n      newMessages.forEach(function (message) {\n        return message['selected'] = true;\n      });\n\n      _this.setState({\n        messages: newMessages\n      });\n    };\n\n    _this.unSelectAll = function () {\n      var newMessages = _toConsumableArray(_this.state.messages);\n\n      newMessages.forEach(function (message) {\n        return message['selected'] = false;\n      });\n\n      _this.setState({\n        messages: newMessages\n      });\n    };\n\n    _this.starred =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        var newMessages, idx, isStarred;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                newMessages = _toConsumableArray(_this.state.messages);\n                idx = newMessages.findIndex(function (message) {\n                  return message.id === id;\n                });\n                isStarred = newMessages[idx]['starred'] || false;\n                isStarred ? newMessages[idx]['starred'] = false : newMessages[idx]['starred'] = true;\n                _context5.next = 6;\n                return _this.updateMessage({\n                  messageIds: [id],\n                  command: 'star',\n                  star: !isStarred\n                });\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.read =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(id) {\n        var newMessages, idx;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                newMessages = _toConsumableArray(_this.state.messages);\n                idx = newMessages.findIndex(function (message) {\n                  return message.id === id;\n                });\n                newMessages[idx]['read'] = true;\n                _context6.next = 5;\n                return _this.updateMessage({\n                  messageIds: [id],\n                  command: 'read',\n                  read: newMessages[idx]['read']\n                });\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x4) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.readSelected = function () {\n      _this.state.messages.filter(function (message) {\n        return message.selected;\n      }).forEach(\n      /*#__PURE__*/\n      function () {\n        var _ref7 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee7(message) {\n          var newMessages, idx;\n          return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  newMessages = _toConsumableArray(_this.state.messages);\n                  idx = newMessages.findIndex(function (m) {\n                    return m.id === message.id;\n                  });\n                  newMessages[idx]['read'] = true;\n                  _context7.next = 5;\n                  return _this.updateMessage({\n                    messageIds: [message.id],\n                    command: 'read',\n                    read: true\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this);\n        }));\n\n        return function (_x5) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    };\n\n    _this.unReadSelected = function () {\n      _this.state.messages.filter(function (message) {\n        return message.selected;\n      }).forEach(function (message) {\n        var newMessages = _toConsumableArray(_this.state.messages);\n\n        var idx = newMessages.findIndex(function (m) {\n          return m.id === message.id;\n        });\n        newMessages[idx]['read'] = false;\n\n        _this.updateMessage({\n          messageIds: [message.id],\n          command: 'read',\n          read: false\n        });\n      });\n    };\n\n    _this.applyLabel = function (e) {\n      _this.state.messages.filter(function (message) {\n        return message.selected;\n      }).forEach(\n      /*#__PURE__*/\n      function () {\n        var _ref8 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee8(message) {\n          var newMessages, idx, labels;\n          return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  newMessages = _toConsumableArray(_this.state.messages);\n                  idx = newMessages.findIndex(function (m) {\n                    return m.id === message.id;\n                  });\n                  labels = newMessages[idx]['labels'];\n\n                  if (labels.includes(e.target.value)) {\n                    _context8.next = 6;\n                    break;\n                  }\n\n                  _context8.next = 6;\n                  return _this.updateMessage({\n                    messageIds: [message.id],\n                    command: 'addLabel',\n                    label: e.target.value\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8, this);\n        }));\n\n        return function (_x6) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    };\n\n    _this.removeLabel = function (e) {\n      _this.state.messages.filter(function (message) {\n        return message.selected;\n      }).forEach(\n      /*#__PURE__*/\n      function () {\n        var _ref9 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee9(message) {\n          var newMessages, idx, labels;\n          return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  newMessages = _toConsumableArray(_this.state.messages);\n                  idx = newMessages.findIndex(function (m) {\n                    return m.id === message.id;\n                  });\n                  labels = newMessages[idx]['labels'];\n\n                  if (!labels.includes(e.target.value)) {\n                    _context9.next = 6;\n                    break;\n                  }\n\n                  _context9.next = 6;\n                  return _this.updateMessage({\n                    messageIds: [message.id],\n                    command: 'removeLabel',\n                    label: e.target.value\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9, this);\n        }));\n\n        return function (_x7) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    };\n\n    _this.toggleComposer = function () {\n      var composerToggle = !_this.state.isComposing;\n\n      _this.setState({\n        isComposing: composerToggle\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          background: \"rgba(200, 200, 200, 0.8)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        toggleComposer: this.toggleComposer,\n        isComposing: this.state.isComposing,\n        messages: this.state.messages,\n        unReadAll: this.unReadSelected,\n        readAll: this.readSelected,\n        selectAll: this.selectAll,\n        unSelectAll: this.unSelectAll,\n        applyLabel: this.applyLabel,\n        removeLabel: this.removeLabel,\n        handleDelete: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/composer\",\n        render: function render() {\n          return React.createElement(Compose, {\n            isComposing: _this2.state.isComposing,\n            handleSubmit: _this2.handleSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/messages\",\n        render: function render() {\n          return React.createElement(Messages, {\n            isComposing: _this2.state.isComposing,\n            messages: _this2.state.messages,\n            select: _this2.select,\n            read: _this2.read,\n            starred: _this2.starred,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(Messages, {\n            isComposing: _this2.state.isComposing,\n            messages: _this2.state.messages,\n            select: _this2.select,\n            read: _this2.read,\n            starred: _this2.starred,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/cooperlightfoot/Desktop/galvinize/q3/react-inbox/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Messages","Toolbar","Compose","App","state","componentDidMount","fetch","response","json","messages","newState","forEach","message","selected","isComposing","setState","updateMessage","data","method","body","JSON","stringify","headers","map","m","handleSubmit","e","preventDefault","target","subject","value","read","starred","labels","handleDelete","filter","messageIds","id","command","select","newMessages","idx","findIndex","checked","selectAll","unSelectAll","isStarred","star","readSelected","unReadSelected","applyLabel","includes","label","removeLabel","toggleComposer","composerToggle","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Messages from './component/Messages';\nimport Toolbar from './components/Toolbar';\nimport Compose from './components/Compose';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './App.css';\n\nclass App extends Component {\n  state = {}\n\n  componentDidMount = async() => {\n    const response = await fetch('https://zeekmanapi.herokuapp.com/api/messages')\n    const messages = await response.json()\n    let newState = {messages:[...messages]}\n    newState.messages.forEach(message => message.selected = false)\n    newState.isComposing = false\n    this.setState(newState)\n  }\n\n  updateMessage = async(data) => {\n    await fetch('https://zeekmanapi.herokuapp.com/api/messages',{\n      method: 'PATCH',\n      body: JSON.stringify(data),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    let response = await fetch('https://zeekmanapi.herokuapp.com/api/messages')\n    const messages = await response.json()\n    let newState = {messages:[...messages]}\n    newState.messages = newState.messages.map(message => {const m = {...message}; m.selected = false; return m})\n    this.setState(newState)\n  }\n\n\n  handleSubmit = async(e) => {\n    e.preventDefault()\n    if(!e.target.subject.value || !e.target.body.value){ return }\n    await fetch('https://zeekmanapi.herokuapp.com/api/messages',{\n      method: 'POST',\n      body: JSON.stringify({\n        subject: e.target.subject.value,\n        body: e.target.body.value,\n        read: false,\n        starred: false,\n        selected: false,\n        labels: [],\n      }),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    let response = await fetch('https://zeekmanapi.herokuapp.com/api/messages')\n    const messages = await response.json()\n    let newState = {messages:[...messages]}\n    newState.isComposing = false\n    this.setState(newState)\n  }\n\n  handleDelete = async() => {\n    const selected = this.state.messages.filter(message=> message.selected)\n    const messageIds = selected.map(message=>message.id)\n    const response = await fetch('https://zeekmanapi.herokuapp.com/api/messages',\n        {\n          method: 'PATCH',\n          body: JSON.stringify({\n            messageIds: [...messageIds],\n            command: 'delete',\n          }),\n          headers:{\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          }\n        })\n    const messages = await response.json()\n    let newState = {messages:[...messages]}\n    newState.messages.forEach(message => message['selected'] = false)\n    this.setState(newState)\n  }\n\n  select = (e, id) => {\n    let newMessages = [...this.state.messages]\n    const idx = newMessages.findIndex(message => message.id === id)\n    newMessages[idx]['selected'] = e.target.checked\n    this.setState({messages: newMessages})\n  }\n\n  selectAll = () => {\n    let newMessages = [...this.state.messages]\n    newMessages.forEach(message => message['selected'] = true)\n    this.setState({messages: newMessages})\n  }\n\n  unSelectAll = () => {\n    let newMessages = [...this.state.messages]\n    newMessages.forEach(message => message['selected'] = false)\n    this.setState({messages: newMessages})\n  }\n\n  starred = async(id) => {\n    let newMessages = [...this.state.messages]\n    const idx = newMessages.findIndex(message => message.id === id)\n    let isStarred = newMessages[idx]['starred'] || false\n    isStarred? newMessages[idx]['starred'] = false : newMessages[idx]['starred'] = true\n    await this.updateMessage({\n      messageIds: [id],\n      command: 'star',\n      star: !isStarred\n    })\n  }\n\n  read = async(id) => {\n    let newMessages = [...this.state.messages]\n    const idx = newMessages.findIndex(message => message.id === id)\n    newMessages[idx]['read'] = true\n    await this.updateMessage({\n      messageIds: [id],\n      command: 'read',\n      read: newMessages[idx]['read']\n    })\n  }\n\n  readSelected = () =>{\n    this.state.messages.filter(message=> message.selected)\n                       .forEach(async message=>{\n                         let newMessages = [...this.state.messages]\n                         const idx = newMessages.findIndex(m => m.id === message.id)\n                         newMessages[idx]['read'] = true\n                         await this.updateMessage({\n                           messageIds: [message.id],\n                           command: 'read',\n                           read: true\n                         })\n                       })\n  }\n\n  unReadSelected = () =>{\n    this.state.messages.filter(message=> message.selected)\n                       .forEach( message=>{\n                         let newMessages = [...this.state.messages]\n                         const idx = newMessages.findIndex(m => m.id === message.id)\n                         newMessages[idx]['read'] = false\n                         this.updateMessage({\n                           messageIds: [message.id],\n                           command: 'read',\n                           read: false\n                         })\n                       })\n  }\n\n  applyLabel = (e) =>{\n      this.state.messages.filter(message=> message.selected)\n                         .forEach(async message=>{\n                           let newMessages = [...this.state.messages]\n                           const idx = newMessages.findIndex(m => m.id === message.id)\n                           let labels = newMessages[idx]['labels']\n                           if (!labels.includes(e.target.value)){\n                             await this.updateMessage({\n                               messageIds: [message.id],\n                               command: 'addLabel',\n                               label: e.target.value\n                             })\n                           }\n                         })\n  }\n\n  removeLabel = (e) =>{\n      this.state.messages.filter(message=> message.selected)\n                         .forEach(async message=>{\n                           let newMessages = [...this.state.messages]\n                           const idx = newMessages.findIndex(m => m.id === message.id)\n                           let labels = newMessages[idx]['labels']\n                           if (labels.includes(e.target.value)){\n                             await this.updateMessage({\n                               messageIds: [message.id],\n                               command: 'removeLabel',\n                               label: e.target.value\n                             })\n                           }\n                         })\n  }\n\n  toggleComposer = () => {\n    let composerToggle = !this.state.isComposing\n    this.setState({isComposing: composerToggle})\n  }\n\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav></nav>\n          <div className=\"container\" style={{background: \"rgba(200, 200, 200, 0.8)\"}}>\n            <Toolbar toggleComposer={this.toggleComposer} isComposing={this.state.isComposing} messages={this.state.messages} unReadAll={this.unReadSelected} readAll={this.readSelected} selectAll={this.selectAll} unSelectAll={this.unSelectAll} applyLabel={this.applyLabel} removeLabel={this.removeLabel} handleDelete={this.handleDelete}/>\n              <Route path=\"/composer\" render={()=> (<Compose isComposing={this.state.isComposing} handleSubmit={this.handleSubmit}/>) }/>\n              <Switch>\n                <Route path=\"/messages\" render={()=> (<Messages isComposing={this.state.isComposing} messages={this.state.messages} select={this.select} read={this.read} starred={this.starred}/>)}/>\n                <Route exact path=\"/\" render={()=> (<Messages isComposing={this.state.isComposing} messages={this.state.messages} select={this.select} read={this.read} starred={this.starred}/>)}/>\n              </Switch>\n          </div>\n        </div>\n      </Router>\n\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}